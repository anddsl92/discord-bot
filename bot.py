# ƒê·ªçc file anhboss.txt
def load_boss_images():
    boss_images = {}
    try:
        if os.path.exists('anhboss.txt'):
            with open('anhboss.txt', 'r', encoding='utf-8') as f:
                for line in f:
                    line = line.strip()
                    if line and '=' in line:
                        boss_name, image_url = line.split('=', 1)
                        boss_images[boss_name.strip()] = image_url.strip()
        print(f"‚úÖ ƒê√£ t·∫£i {len(boss_images)} ·∫£nh boss t·ª´ file")
    except Exception as e:
        print(f"‚ùå L·ªói khi ƒë·ªçc file anhboss.txt: {e}")
    return boss_images

BOSS_IMAGES = load_boss_images()

# C·∫≠p nh·∫≠t danh s√°ch boss cho l·ªánh chamcong
BOSS_LIST_CHAMCONG = [
    {"name": "Orfen", "value": "orfen"},
    {"name": "Orfen X√¢m L∆∞·ª£c", "value": "orfen_xam_luoc"},
    {"name": "Silla", "value": "silla"},
    {"name": "Murf", "value": "murf"},
    {"name": "Normus", "value": "normus"},
    {"name": "Ukanba", "value": "ukanba"},
    {"name": "Selihorden", "value": "selihorden"}
]

# L·ªánh chamcong m·ªõi
@bot.tree.command(name="chamcong", description="B√°o c√°o boss ƒë√£ ƒë√°nh")
@app_commands.describe(
    boss="T√™n boss ƒë√£ ƒë√°nh",
    ngay_thang="Ng√†y ƒë√°nh boss (dd/mm)",
    vi_tri="V·ªã tr√≠ (n·∫øu c√≥)",
    hinh_anh="H√¨nh ·∫£nh minh ch·ª©ng (t·∫£i l√™n ·∫£nh)"
)
@app_commands.choices(boss=[
    app_commands.Choice(name=boss["name"], value=boss["value"]) for boss in BOSS_LIST_CHAMCONG
])
@app_commands.choices(vi_tri=[
    app_commands.Choice(name="Buff+Khi√™n", value="buff_khien"),
    app_commands.Choice(name="H·ªìi M√°u ƒê∆°n", value="hoi_mau_don")
])
async def chamcong_command(
    interaction: discord.Interaction, 
    boss: app_commands.Choice[str],
    ngay_thang: str,
    vi_tri: app_commands.Choice[str] = None,
    hinh_anh: discord.Attachment = None
):
    """L·ªánh b√°o c√°o boss m·ªõi"""
    # Ki·ªÉm tra xem c√≥ trong k√™nh ch·∫•m c√¥ng kh√¥ng
    if interaction.channel.name != CHAMCONG_CHANNEL_NAME:
        await interaction.response.send_message(
            f"‚ùå L·ªánh n√†y ch·ªâ ƒë∆∞·ª£c s·ª≠ d·ª•ng trong k√™nh {CHAMCONG_CHANNEL_NAME}!",
            ephemeral=True
        )
        return

    # Ki·ªÉm tra xem user ƒë√£ set role ch∆∞a
    user_id = interaction.user.id
    if user_id not in user_roles_db:
        await interaction.response.send_message(
            "‚ùå B·∫°n c·∫ßn ƒëƒÉng k√Ω role tr∆∞·ªõc khi s·ª≠ d·ª•ng l·ªánh ch·∫•m c√¥ng!",
            ephemeral=True
        )
        return

    # L·∫•y nickname t·ª´ user_roles_db
    user_role_data = user_roles_db[user_id]
    nickname = user_role_data.get("nickname", interaction.user.display_name)

    # Ki·ªÉm tra n·∫øu role l√† C·∫ßu Ph√©p (CP) th√¨ b·∫Øt bu·ªôc ph·∫£i ch·ªçn v·ªã tr√≠
    if user_role_data.get("role_short") == "CP" and vi_tri is None:
        await interaction.response.send_message(
            "‚ùå V·ªõi role C·∫ßu Ph√©p (CP), b·∫°n ph·∫£i ch·ªçn v·ªã tr√≠!",
            ephemeral=True
        )
        return

    # Ki·ªÉm tra ƒë·ªãnh d·∫°ng ng√†y/th√°ng
    try:
        day, month = ngay_thang.split('/')
        day = int(day)
        month = int(month)
        # Ki·ªÉm tra ng√†y th√°ng h·ª£p l·ªá
        if day < 1 or day > 31 or month < 1 or month > 12:
            raise ValueError
        # T·∫°o chu·ªói ng√†y/th√°ng ƒë√£ chu·∫©n h√≥a (ƒë·∫£m b·∫£o c√≥ 2 ch·ªØ s·ªë cho ng√†y v√† th√°ng)
        ngay_thang = f"{day:02d}/{month:02d}"
    except:
        await interaction.response.send_message(
            "‚ùå ƒê·ªãnh d·∫°ng ng√†y/th√°ng kh√¥ng h·ª£p l·ªá! H√£y nh·∫≠p theo d·∫°ng dd/mm (v√≠ d·ª•: 15/03).",
            ephemeral=True
        )
        return

    # L·∫•y URL ·∫£nh boss t·ª´ BOSS_IMAGES
    boss_image_url = BOSS_IMAGES.get(boss.name)
    if not boss_image_url:
        boss_image_url = BOSS_IMAGES.get(boss.value)  # Th·ª≠ v·ªõi value n·∫øu kh√¥ng t√¨m th·∫•y b·∫±ng name

    # T·∫°o embed b√°o c√°o boss
    embed = discord.Embed(
        title="üéØ B√ÅO C√ÅO BOSS",
        color=0x0099ff,
        timestamp=discord.utils.utcnow()
    )

    # Th√™m c√°c tr∆∞·ªùng th√¥ng tin
    embed.add_field(name="Boss", value=boss.name, inline=True)
    embed.add_field(name="Th√†nh Vi√™n", value=nickname, inline=True)
    embed.add_field(name="Th·ªùi Gian", value=ngay_thang, inline=True)

    # N·∫øu c√≥ v·ªã tr√≠ th√¨ th√™m v√†o
    if vi_tri:
        embed.add_field(name="Vai tr√≤", value=vi_tri.name, inline=True)

    # Th√™m ·∫£nh boss n·∫øu c√≥
    if boss_image_url:
        embed.set_thumbnail(url=boss_image_url)

    # X·ª≠ l√Ω ·∫£nh ƒë√≠nh k√®m
    image_url = None
    if hinh_anh:
        image_url = hinh_anh.url
        embed.set_image(url=image_url)

    # Th√™m footer
    embed.set_footer(text=f"B√°o c√°o b·ªüi {interaction.user.name}")

    # G·ª≠i embed
    await interaction.response.send_message(embed=embed)

    # L∆∞u th√¥ng tin boss ch·ªù duy·ªát (n·∫øu c·∫ßn cho webhook sau n√†y)
    # ... (ph·∫ßn n√†y c√≥ th·ªÉ gi·ªØ nguy√™n nh∆∞ c≈© n·∫øu v·∫´n c·∫ßn duy·ªát)
